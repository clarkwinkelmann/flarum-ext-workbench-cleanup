{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@clarkwinkelmann/workbench-cleanup/webpack/bootstrap","webpack://@clarkwinkelmann/workbench-cleanup/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/workbench-cleanup/webpack/runtime/define property getters","webpack://@clarkwinkelmann/workbench-cleanup/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/workbench-cleanup/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/workbench-cleanup/external root \"flarum.core.compat['admin/app']\"","webpack://@clarkwinkelmann/workbench-cleanup/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/workbench-cleanup/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/workbench-cleanup/./src/admin/components/Inspector.ts","webpack://@clarkwinkelmann/workbench-cleanup/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","import {ClassComponent} from 'mithril';\nimport app from 'flarum/admin/app';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\n\nfunction format(value: number) {\n    if (value > 1000000000) {\n        return Math.round(value / 1000000000) + 'GB';\n    }\n\n    if (value > 1000000) {\n        return Math.round(value / 1000000) + 'MB';\n    }\n\n    if (value > 1000) {\n        return Math.round(value / 1000) + 'kB';\n    }\n\n    return value + 'B';\n}\n\nexport default class Inspector implements ClassComponent {\n    loading: boolean = true\n    folders: {\n        path: string\n        extensions: {\n            [key: string]: {\n                vendor?: number\n                node_modules?: number\n            }\n        }\n    }[] | null = null\n    cleaning: boolean = false\n\n    refresh() {\n        this.loading = true;\n        this.folders = null;\n        app.request<any>({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/workbench-cleanup/inspect',\n        }).then(response => {\n            this.folders = response;\n            this.loading = false;\n            m.redraw();\n        }).catch(error => {\n            this.loading = false;\n            m.redraw();\n            throw error;\n        });\n    }\n\n    clean(folder: string, extension: string, type: string) {\n        this.cleaning = true;\n        app.request<any>({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/workbench-cleanup/clean',\n            body: {\n                folder,\n                extension,\n                type,\n            },\n        }).then(() => {\n            this.cleaning = false;\n            m.redraw();\n        }).catch(error => {\n            this.cleaning = false;\n            m.redraw();\n            throw error;\n        });\n    }\n\n    oninit() {\n        this.refresh();\n    }\n\n    view() {\n        return [\n            Button.component({\n                className: 'Button',\n                onclick: () => {\n                    this.refresh();\n                },\n                disabled: this.loading,\n            }, 'Refresh'),\n            m('.WorkbenchCleanup', this.loading ? LoadingIndicator.component() : this.list()),\n        ];\n    }\n\n    list() {\n        if (!Array.isArray(this.folders)) {\n            return m('p', 'An error occurred');\n        }\n\n        if (this.folders.length === 0) {\n            return m('p', 'No workbench folders found');\n        }\n\n        return this.folders.map(folder => {\n            const extensions = Object.keys(folder.extensions).sort();\n\n            return [\n                m('h3', folder.path),\n                m('table', [\n                    m('thead', m('tr', [\n                        m('th', 'Extension'),\n                        m('th', [\n                            Button.component({\n                                className: 'Button Button--icon',\n                                icon: 'fas fa-eraser',\n                                onclick: () => {\n                                    if (!confirm('Delete all?')) {\n                                        return;\n                                    }\n\n                                    this.clean(folder.path, '*', 'vendor');\n                                },\n                                loading: this.cleaning,\n                            }),\n                            ' vendor',\n                        ]),\n                        m('th', [\n                            Button.component({\n                                className: 'Button Button--icon',\n                                icon: 'fas fa-eraser',\n                                onclick: () => {\n                                    if (!confirm('Delete all?')) {\n                                        return;\n                                    }\n\n                                    this.clean(folder.path, '*', 'node_modules');\n                                },\n                                loading: this.cleaning,\n                            }),\n                            ' node_modules',\n                        ]),\n                    ])),\n                    m('tbody', extensions.map(extension => {\n                        const {vendor, node_modules} = folder.extensions[extension];\n\n                        return m('tr', [\n                            m('td', extension),\n                            m('td', [\n                                Button.component({\n                                    className: 'Button Button--icon',\n                                    icon: 'fas fa-eraser',\n                                    onclick: () => {\n                                        this.clean(folder.path, extension, 'vendor');\n                                    },\n                                    loading: this.cleaning,\n                                    disabled: !vendor,\n                                }),\n                                ' ',\n                                vendor ? format(vendor) : m('em', 'Not found'),\n                            ]),\n                            m('td', [\n                                Button.component({\n                                    className: 'Button Button--icon',\n                                    icon: 'fas fa-eraser',\n                                    onclick: () => {\n                                        this.clean(folder.path, extension, 'node_modules');\n                                    },\n                                    loading: this.cleaning,\n                                    disabled: !node_modules,\n                                }),\n                                ' ',\n                                node_modules ? format(node_modules) : m('em', 'Not found'),\n                            ]),\n                        ]);\n                    })),\n                ]),\n            ];\n        });\n    }\n}\n","import app from 'flarum/admin/app';\nimport Inspector from './components/Inspector';\n\napp.initializers.add('clarkwinkelmann-workbench-cleanup', () => {\n    app.extensionData\n        .for('clarkwinkelmann-workbench-cleanup')\n        .registerSetting(() => m(Inspector));\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","format","Math","round","Inspector","loading","folders","cleaning","_proto","refresh","_this","this","app","method","url","attribute","then","response","m","redraw","error","clean","folder","extension","type","_this2","body","oninit","view","_this3","Button","className","onclick","disabled","LoadingIndicator","list","_this4","Array","isArray","length","map","extensions","keys","sort","path","icon","confirm","_folder$extensions$ex","vendor","node_modules","add","registerSetting"],"sourceRoot":""}