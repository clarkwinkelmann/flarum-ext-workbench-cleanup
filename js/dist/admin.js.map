{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://@clarkwinkelmann/workbench-cleanup/webpack/bootstrap","webpack://@clarkwinkelmann/workbench-cleanup/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/workbench-cleanup/webpack/runtime/define property getters","webpack://@clarkwinkelmann/workbench-cleanup/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/workbench-cleanup/external root \"flarum.core.compat['admin/app']\"","webpack://@clarkwinkelmann/workbench-cleanup/external root \"flarum.core.compat['common/components/Button']\"","webpack://@clarkwinkelmann/workbench-cleanup/external root \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@clarkwinkelmann/workbench-cleanup/external root \"flarum.core.compat['common/components/Dropdown']\"","webpack://@clarkwinkelmann/workbench-cleanup/./src/admin/components/Inspector.ts","webpack://@clarkwinkelmann/workbench-cleanup/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/LoadingIndicator'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Dropdown'];","import {ClassComponent} from 'mithril';\nimport app from 'flarum/admin/app';\nimport Button from 'flarum/common/components/Button';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport Dropdown from 'flarum/common/components/Dropdown';\n\nfunction format(value: number) {\n    if (value > 1000000000) {\n        return Math.round(value / 1000000000) + 'GB';\n    }\n\n    if (value > 1000000) {\n        return Math.round(value / 1000000) + 'MB';\n    }\n\n    if (value > 1000) {\n        return Math.round(value / 1000) + 'kB';\n    }\n\n    return value + 'B';\n}\n\ntype ExtensionMetric = 'vendor' | 'node_modules' | 'git' | 'total';\n\ntype SortOption = 'alpha' | ExtensionMetric;\n\ntype SortOptions = {\n    [key in SortOption]: string;\n};\n\ntype ExtensionMetrics = {\n    [key in ExtensionMetric]: number;\n};\n\nconst SORT_OPTIONS: SortOptions = {\n    alpha: 'Alphabetically',\n    vendor: 'Vendor size',\n    node_modules: 'Node size',\n    git: 'Git size',\n    total: 'Total size',\n};\n\nfunction toggleArrayValue<T>(array: T[], value: T, enable: boolean = false) {\n    const index = array.indexOf(value);\n\n    if (enable) {\n        if (index === -1) {\n            array.push(value);\n        }\n    } else if (index !== -1) {\n        array.splice(index, 1);\n    }\n}\n\nexport default class Inspector implements ClassComponent {\n    loading: boolean = true\n    folders: {\n        path: string\n        extensions: {\n            [key: string]: ExtensionMetrics\n        }\n    }[] | null = null\n    cleaningExtension: string[] = []\n    cleaningType: ExtensionMetric[] = []\n    sort: SortOption = 'alpha'\n\n    refresh() {\n        this.loading = true;\n        this.folders = null;\n        app.request<any>({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/workbench-cleanup/inspect',\n        }).then(response => {\n            this.folders = response;\n            this.loading = false;\n            m.redraw();\n        }).catch(error => {\n            this.loading = false;\n            m.redraw();\n            throw error;\n        });\n    }\n\n    clean(folder: string, extension: string, type: ExtensionMetric) {\n        toggleArrayValue(this.cleaningExtension, extension, true);\n        toggleArrayValue(this.cleaningType, type, true);\n\n        app.request<{\n            deleted: { folder: string, extension: string, type: ExtensionMetric }[]\n        }>({\n            method: 'POST',\n            url: app.forum.attribute('apiUrl') + '/workbench-cleanup/clean',\n            body: {\n                folder,\n                extension,\n                type,\n            },\n        }).then(result => {\n            // Update local state for deleted content\n            if (result && Array.isArray(result.deleted) && this.folders) {\n                result.deleted.forEach(deleted => {\n                    this.folders!.forEach(folder => {\n                        if (folder.path !== deleted.folder) {\n                            return;\n                        }\n\n                        Object.keys(folder.extensions).forEach(extension => {\n                            if (extension !== deleted.extension) {\n                                return;\n                            }\n\n                            if (!folder.extensions[extension][deleted.type]) {\n                                return;\n                            }\n\n                            folder.extensions[extension].total -= folder.extensions[extension][deleted.type]!;\n                            delete folder.extensions[extension][deleted.type];\n                        });\n                    });\n                });\n            }\n\n            toggleArrayValue(this.cleaningExtension, extension, false);\n            toggleArrayValue(this.cleaningType, type, false);\n            m.redraw();\n        }).catch(error => {\n            toggleArrayValue(this.cleaningExtension, extension, false);\n            toggleArrayValue(this.cleaningType, type, false);\n            m.redraw();\n            throw error;\n        });\n    }\n\n    oninit() {\n        this.refresh();\n    }\n\n    view() {\n        return [\n            Button.component({\n                className: 'Button',\n                onclick: () => {\n                    this.refresh();\n                },\n                disabled: this.loading,\n            }, 'Refresh'),\n            ' ',\n            Dropdown.component({\n                label: 'Sort: ' + SORT_OPTIONS[this.sort],\n                buttonClassName: 'Button',\n            }, (Object.keys(SORT_OPTIONS) as SortOption[]).map(option => {\n                return Button.component({\n                    onclick: () => {\n                        this.sort = option;\n                    },\n                }, SORT_OPTIONS[option]);\n            })),\n            m('.WorkbenchCleanup', this.loading ? LoadingIndicator.component() : this.list()),\n        ];\n    }\n\n    isLoading(extension: string, type: ExtensionMetric) {\n        return (this.cleaningExtension.includes(extension) || this.cleaningExtension.includes('*')) && this.cleaningType.includes(type);\n    }\n\n    list() {\n        if (!Array.isArray(this.folders)) {\n            return m('p', 'An error occurred');\n        }\n\n        if (this.folders.length === 0) {\n            return m('p', 'No workbench folders found');\n        }\n\n        return this.folders.map(folder => {\n            const extensions = Object.keys(folder.extensions).sort((a, b) => {\n                if (this.sort === 'alpha') {\n                    return a > b ? 1 : -1;\n                }\n\n                return (folder.extensions[a][this.sort] || 0) > (folder.extensions[b][this.sort] || 0) ? -1 : 1;\n            });\n\n            let totalCode = 0;\n            let totalVendor = 0;\n            let totalNode = 0;\n            let totalGit = 0;\n\n            const rows = extensions.map(extension => {\n                const {total, vendor, node_modules, git} = folder.extensions[extension];\n\n                const codeSize = total - (vendor || 0) - (node_modules || 0) - (git || 0);\n\n                totalCode += codeSize;\n                totalVendor += vendor || 0;\n                totalNode += node_modules || 0;\n                totalGit += git || 0;\n\n                return m('tr', [\n                    m('td', extension),\n                    m('td', [\n                        Button.component({\n                            className: 'Button Button--icon',\n                            icon: 'fas fa-eraser',\n                            onclick: () => {\n                                this.clean(folder.path, extension, 'vendor');\n                            },\n                            loading: this.isLoading(extension, 'vendor'),\n                            disabled: !vendor,\n                        }),\n                        ' ',\n                        vendor ? format(vendor) : m('em', 'Not found'),\n                    ]),\n                    m('td', [\n                        Button.component({\n                            className: 'Button Button--icon',\n                            icon: 'fas fa-eraser',\n                            onclick: () => {\n                                this.clean(folder.path, extension, 'node_modules');\n                            },\n                            loading: this.isLoading(extension, 'node_modules'),\n                            disabled: !node_modules,\n                        }),\n                        ' ',\n                        node_modules ? format(node_modules) : m('em', 'Not found'),\n                    ]),\n                    m('td', git ? format(git) : m('em', 'Not found')),\n                    m('td', format(codeSize)),\n                    m('td', format(total)),\n                ]);\n            });\n\n            return [\n                m('h3', folder.path),\n                m('table', [\n                    m('thead', [\n                            m('tr', [\n                                m('th', 'Extension'),\n                                m('th', 'vendor'),\n                                m('th', 'node_modules'),\n                                m('th', 'git'),\n                                m('th', 'code'),\n                                m('th', 'everything'),\n                            ]),\n                            m('tr', [\n                                m('th', 'Total'),\n                                m('th', [\n                                    Button.component({\n                                        className: 'Button Button--icon',\n                                        icon: 'fas fa-eraser',\n                                        onclick: (event: MouseEvent) => {\n                                            if (!event.shiftKey && !confirm('Delete all vendor folders in ' + folder.path + '')) {\n                                                return;\n                                            }\n\n                                            this.clean(folder.path, '*', 'vendor');\n                                        },\n                                        loading: this.isLoading('*', 'vendor'),\n                                        disabled: totalVendor === 0,\n                                    }),\n                                    ' ',\n                                    totalVendor > 0 ? format(totalVendor) : m('em', 'None found'),\n                                ]),\n                                m('th', [\n                                    Button.component({\n                                        className: 'Button Button--icon',\n                                        icon: 'fas fa-eraser',\n                                        onclick: (event: MouseEvent) => {\n                                            if (!event.shiftKey && !confirm('Delete all node_modules folders in ' + folder.path + '')) {\n                                                return;\n                                            }\n\n                                            this.clean(folder.path, '*', 'node_modules');\n                                        },\n                                        loading: this.isLoading('*', 'node_modules'),\n                                        disabled: totalNode === 0,\n                                    }),\n                                    ' ',\n                                    totalNode > 0 ? format(totalNode) : m('em', 'None found'),\n                                ]),\n                                m('th', format(totalGit)),\n                                m('th', format(totalCode)),\n                                m('th', format(totalCode + totalVendor + totalNode + totalGit)),\n                            ]),\n                        ],\n                    ),\n                    m('tbody', rows),\n                ]),\n            ];\n        });\n    }\n}\n","import app from 'flarum/admin/app';\nimport Inspector from './components/Inspector';\n\napp.initializers.add('clarkwinkelmann-workbench-cleanup', () => {\n    app.extensionData\n        .for('clarkwinkelmann-workbench-cleanup')\n        .registerSetting(() => m(Inspector))\n        .registerSetting({\n            type: 'textarea',\n            setting: 'workbench-cleanup.folders',\n            label: 'Custom list of workbench folders',\n            placeholder: 'Leave empty to scan composer.json. When customizing, one absolute path per line'\n        });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","flarum","core","compat","format","value","Math","round","SORT_OPTIONS","alpha","vendor","node_modules","git","total","toggleArrayValue","array","enable","index","indexOf","push","splice","Inspector","loading","folders","cleaningExtension","cleaningType","sort","_proto","refresh","_this","this","app","method","url","attribute","then","response","m","redraw","error","clean","folder","extension","type","_this2","body","result","Array","isArray","deleted","forEach","path","keys","extensions","oninit","view","_this3","Button","className","onclick","disabled","Dropdown","label","buttonClassName","map","option","LoadingIndicator","list","isLoading","includes","_this4","length","b","totalCode","totalVendor","totalNode","totalGit","rows","_folder$extensions$ex","codeSize","icon","event","shiftKey","confirm","add","registerSetting","setting","placeholder"],"sourceRoot":""}